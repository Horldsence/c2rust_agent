{
  "llm": {
    "default_provider": "openai",
    "target_platform": "openai_local",
    "providers": {
      "openai": {
        "api_key": "",
        "api_url": "https://api.openai.com/v1",
        "model_name": "gpt-4o-mini",
        "temperature": 0.7,
        "top_p": 1.0,
        "frequency_penalty": 0,
        "request_timeout": 60,
        "think_switch": false
      },
      "openai_local": {
        "api_key": "none_api_key",
        "api_url": "http://localhost:11434/v1",
        "model_name": "deepseek-r1:7b",
        "temperature": 0.7,
        "top_p": 1.0,
        "frequency_penalty": 0,
        "request_timeout": 60,
        "think_switch": true
      },
      "anthropic": {
        "api_key": "",
        "api_url": "https://api.anthropic.com",
        "model_name": "claude-3-5-sonnet-20241022",
        "temperature": 0.7,
        "request_timeout": 60
      },
      "anthropic_bedrock": {
        "region": "us-east-1",
        "access_key": "",
        "secret_key": "",
        "model_name": "anthropic.claude-3-5-sonnet-20241022-v2:0",
        "temperature": 0.7,
        "request_timeout": 60
      },
      "cohere": {
        "api_key": "",
        "api_url": "https://api.cohere.ai/v1",
        "model_name": "command-r-plus",
        "temperature": 0.7,
        "request_timeout": 60
      },
      "google": {
        "api_key": "",
        "api_url": "",
        "model_name": "gemini-1.5-pro-002",
        "temperature": 0.7,
        "request_timeout": 60,
        "extra_body": {}
      }
    },
    "prompt": {
      "system": "**角色**：你是一位精通C和Rust的编译器专家，专长于将C代码转换为高效、安全的Rust代码。\\n**核心指令**：\\n1. 严格保持功能一致性，优先使用Rust原生特性（如Option/Result）代替C的指针和错误处理\\n2. 输出必须为JSON格式，包含以下字段：\\n   - `original`：原始C代码（字符串）\\n   - `rust_code`：转换后的完整Rust代码（字符串）\\n   - `key_changes`：关键修改的简要说明（字符串数组）\\n   - `warnings`：潜在问题警告（字符串数组）\\n3. 当遇到未定义的C行为时：\\n   - 添加`\\/\\/ FIXME:`注释标记\\n   - 在`warnings`中详细说明风险\\n4. 转换要求：\\n   - 用`Option<*mut T>`处理可能为NULL的指针\\n   - 将C宏转换为Rust常量/函数\\n   - 用`libc` crate处理系统调用\\n   - 显式标注`unsafe`块\\n\\n**输出示例**：\\n```json\\n{\\n  \\\"original\\\": \\\"int add(int a, int b) { return a + b; }\\\",\\n  \\\"rust_code\\\": \\\"fn add(a: i32, b: i32) -> i32 { a + b }\\\",\\n  \\\"key_changes\\\": [\\\"使用i32替代int\\\", \\\"移除多余分号\\\"],\\n  \\\"warnings\\\": []\\n}\\n```"
    }
  },
  "c2rust": {
    "analysis": {
      "include_headers": true,
      "analyze_dependencies": true,
      "extract_functions": true,
      "extract_structs": true,
      "extract_macros": true
    },
    "conversion": {
      "preserve_comments": true,
      "generate_unsafe_blocks": true,
      "use_raw_pointers": false,
      "add_type_annotations": true,
      "generate_tests": false
    },
    "output": {
      "format_code": true,
      "generate_cargo_toml": true,
      "create_modules": true,
      "preserve_directory_structure": true
    }
  },
  "convert_services" :{
      "max_retries": 3,
      "timeout": 60
  },
  "logging": {
    "level": "DEBUG",
    "file_logging": false,
    "log_file": "logs/c2rust_agent.log"
  },
  "debug": false
}
